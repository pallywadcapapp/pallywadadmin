@{
    ViewBag.Title = "Dividends";
}
<style>
    .myspan{
        width:100% !important;
        display: grid;
    }
    .savings{
        color: green;
    }

    .loans{
        color: red;
    }

    .sandl{
        display: none;
    }
</style>
<div class="container-fluid">
    <!-- Breadcrumbs-->
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="#">Dashboard</a>
        </li>
        <li class="breadcrumb-item active">Dividends</li>
    </ol>
    <!-- Example DataTables Card-->

    <div id="tab">
        <ul>
            <li><a href="#tabs-1">Dividends</a></li>
            <!--<li><a href="#tabs-2">Posted Payments</a></li>-->
        </ul>
        <div id="tabs-1">
            <div class="card mb-3">
                <div class="card-header">
                    <i class="fa fa-table"></i>Dividends
                </div>
                <div class="card-body">
                    <div class="row">

                        <div class="col-sm-12">
                            <div id="reportrange" class="pull-right"
                                style="background: #fff; cursor: pointer; padding: 5px 10px; border: 1px solid #ccc">
                                <i class="glyphicon glyphicon-calendar fa fa-calendar"></i>
                                <span>December 30, 2014 - January 28, 2015</span> <b class="caret"></b>
                            </div>
                        </div>
                        <div class="col-sm-12">
                            <div class="table-responsive">
                                <!-- data-target="#bulkUploadModal" -->
                                <a id="demo02" class="btn btn-success" data-toggle="modal"
                                    >Calc Dividents</a> 
                                <table id="dividendsTab" class="table table-bordered" width="100%"
                                    cellspacing="0" data-show-footer="true" data-pagination="true"
                                    data-sort-name="memberid" data-sort-order="desc" data-page-size="50"
                                    data-page-list="[ 25, 50, 100, 200, 500, ALL]" data-show-header="true"
                                    data-id-field="memberid" data-show-refresh="true" data-show-export="true"
                                    data-show-columns="true" data-show-toggle="true" data-search="true" data-group-by="true"
                                    data-group-by-field="memberId">
                                    <thead>
                                        <tr>
                                            <th data-field="memberid">ID</th>
                                            <th data-field="memberid" data-formatter="fullNameFormatter">Name</th>
                                            <th data-field="transyear">Year</th>
                                            <th data-field="monthlyamt" data-formatter="priceDetailFormatter"
                                                data-footer-formatter="priceFormatter">
                                                Total Amount
                                            </th>
                                            <th data-field="savingsAmount" data-formatter="priceDetailFormatter"
                                                data-footer-formatter="priceFormatter">
                                                Sav Amount
                                            </th>
                                            <th data-field="loanAmount" data-formatter="priceDetailFormatter"
                                                data-footer-formatter="priceFormatter">
                                                Loan Amount
                                            </th>
                                            <!--<th data-field="status" data-formatter="statusFormatter">
                                            </th>-->
                                            <th data-field="memberid" data-formatter="operationFormatter"
                                                data-footer-formatter="processFormatter"></th>
                                        </tr>
                                    </thead>
                                </table>

                            </div>
                        </div>
                    </div>


                </div>
                <div class="card-footer small text-muted">Updated Today at <span id="todayT"></span></div>

            </div>
        </div>
    </div>
    <div id="bulkUploadModal" class="modal fade" role="dialog">
        <div class="modal-dialog  modal-lg">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Members Dividend Calculator</h4>
                </div>
                <div class="modal-body">
                    <div class="col-xs-12">
                        <p>
                            <span>Processing Year: </span>
                            <select class="form-select" name="year" id="year"></select>
                        </p>
                        <p>
                            <span>Annual Dividend Delcared: </span><input class="form-control" type="number" name="amount" id="amount" />
                        </p>
                        <p>
                            <span>Duration </span><select class="form-select" name="duration" id="duration"></select>
                        </p>
                        <p>
                            <span>Options </span>
                            <select class="form-select" name="option" id="option">
                                <option value="1">Savings Only</option>
                                <option value="2">Savings & Loans</option>
                            </select>
                        </p>
                        <p class="lss sandl">
                            <span>Savings Percentage </span><input class="form-control" type="number" id="savPercentage" placeholder="Savings Percentage" />
                        </p>
                        <p class="lss sandl">
                            <span>Loan Percentage </span><input class="form-control" type="number" id="loanPercentage" placeholder="Loan Percentage" />
                        </p>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" onclick="process()" class="btn btn-success">Process</button>
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                </div>
            </div>

        </div>
    </div>

</div>

@section Scripts{
<script src="~/Scripts/config.js" type="text/javascript"></script>
<script>
    var appyear = localStorage.getItem('app_year');
    var startyear = new Date(appyear, 0, 1).addHours(2).toISOString().split('T')[0];
    var today = new Date().addHours(2).toISOString().split('T')[0];
    //var start = startyear.toISOString().split('T')[0];
    var processByEmail = JSON.parse(localStorage.getItem('uemail'));
    var processBy = localStorage.getItem('fullname');
    var status = ''; var transtype = '';
    var revisedData = [];
    var sheetData = [];


    loadSelect();

    function loadSelect(){
        var $duration = $('#duration');
        var $year = $('#year');
        $duration.empty();
        $year.empty();
            for (var counter = 1; counter <= 12; counter++) {
                $option = $('<option value="' + counter + '">' + counter + '</option>');
                $duration.append($option);
                //$rproduct.append($option);
            }

            var year = new Date().getFullYear();
            year = parseInt(year);
            
            for (var counter = 12; counter >= 1; counter --) {
                var val = year - counter + 3;
                $option = $('<option value="' + val  + '">' + val + '</option>');
                $year.append($option);
                //$rproduct.append($option);
            }
    }
    

    function priceDetailFormatter(value, row, index) {
        return currformatter.format(parseFloat(value));
    }
    
    function fullNameFormatter(value, row, index) {
        var fullname = getMemberById(value).fullname
        return fullname;
    }
    
    function statusFormatter(value, row, index) {
        if (value == 'Invalid member') {
            return '<span><i class="fa fa-close"></i> ' + value + '</span>';
        } else {
            return '<span><i class="fa fa-user-circle"></i> ' + value + '</span>';
        }
    }
    function priceFormatter(data) {
        var field = this.field
        return currformatter.format(data.map(function (row) {
            return +row[field]
        }).reduce(function (sum, i) {
            return sum + i
        }, 0))
    }

    function processFormatter(data) {
        sheetData = data;
        var field = 'status';
        //var allvalid = true;
        for (var i = 0; i < sheetData.length; i++) {
            if (data[i][field] == 'Invalid member') {
                return '<button class="btn btn-success" disabled onclick="processDivident()";>Process</button>';
            }
        }
        return '<button class="btn btn-success" onclick="processDivident()";>Process</button>';
    }


    function operationFormatter(value, row, index) {
        return '<div class="btn-group"><button data-toggle="dropdown" class="btn btn-danger dropdown-toggle" > Action <span class="caret" ></span ></button >' +
            ' <ul class="dropdown-menu">' +
            '<li><a id="demo01" class="btn" data-toggle="modal" data-target="#loadViewModal" onclick="loadView(\'' + value + '\')">Verify</a></li>' +
            ' </ul></div >'
    }
    function actionFormatter(value, row, index) {
        return '<a href="./tbdetails?year=2018&id=' + value + '" >' + value + '</a>';
    };
    function refreshTables() {
        var newUrl = appConfig.apiURL + 'api/generalledger/journal?startdate=' + startyear + '&enddate=' + today;
        var pnewUrl = appConfig.apiURL + 'api/generalledger/PostedJournal?startdate=' + startyear + '&enddate=' + today;
        $('#journalTab').bootstrapTable('refresh', { url: newUrl, silent: true });
        $('#dividendsTab').bootstrapTable('refresh', { url: pnewUrl, silent: true });
    }

        function process() {
            $('#bulkUploadModal').pleaseWait();
        var year = $('#year').val();
        var duration = $('#duration').val();
        var amount = $('#amount').val();
            var savPercentage = $('#savPercentage').val();
            var loanPercentage = $('#loanPercentage').val();

        var type = $('#option').val();
            var url = appConfig.apiURL + "api/dividends/dividends?year=" + year+
            '&duration=' + duration + '&amount=' + amount + '&type=' + type;

            if(type =='2' ){
                var sav = parseInt(savPercentage);
                var loan = parseInt(loanPercentage);

                if((sav + loan) !== 100){
                    toastr.error('the savings and loan summation is not equal to 100% ');
                    $('#bulkUploadModal').pleaseWait('stop');
                    return 0;
                }
                url = appConfig.apiURL + "api/dividends/dividends?year=" + year +
                    '&duration=' + duration + '&amount=' + amount + '&type=' + type + '&sav='+ sav + '&loan=' + loan ;
            }
            $.ajax({
                type: 'GET',
                url: url,
                dataType: 'json',
                contentType: "application/json",
            }).done(function (data) {
                $('#bulkUploadModal').pleaseWait('stop');
                $('#bulkUploadModal').modal('hide');
                processCalc(data);
            }).fail(function (request, message, error) {
                $('#bulkUploadModal').pleaseWait('stop');
                toastr.error('error ' + error + 'for processing dividends ' );
            });
    }

    function processCalc(data) {
        console.log(data)
        //var newUrl = appConfig.apiURL + 'api/generalledger/journal?startdate=' + startyear + '&enddate=' + today;
        $('#dividendsTab').bootstrapTable({ data: data });

        $('#dividendsTab').bootstrapTable('resetView');
    }


    $(function () {
        $('#startdate').val(startyear);
        $('#enddate').val(today);

        $('#demo02').click(function(e){
            $('#bulkUploadModal').modal('show');
        })

            $('#option').on('change', (e)=>{
                if(e.target.value == '2'){
                    $('.lss').removeClass('sandl');
                }else{
                    $('.lss').addClass('sandl');
                }
            });
        $('#load').click(function (e) {
            var startdate = $('#startdate').val();
            var enddate = $('#enddate').val();
            var glUrl = appConfig.apiURL + "./api/generalledger/Journal?startdate=" + startdate + '&enddate=' + enddate;
            $('#journalTab').bootstrapTable('refresh', { url: glUrl, silent: false });
        });

        function loadTable(startdate, enddate) {
            var pnewUrl = appConfig.apiURL + 'api/Dividends/AccountDetails?startdate=' + startdate + '&enddate=' + enddate;
            $('#dividendsTab').bootstrapTable('refresh', { url: pnewUrl, silent: false });
        }

        init_daterangepicker('reportrange', loadTable);


        function buildElement(str, type){
            return '<span class="myspan ' + type +'">' + str + '</span>';
        }

        function memberFullnameFormatter(value, row, index){
            var result = '';
            //$.each(row, function(p){
            var data = row[0];
            for (var key in data) {
                if (key == 'memberId') {
                    //
                    result += buildElement(getMemberById(data[key]).fullname);
                }
                }
            //});
            return result;
        }

        function memberFormatter(value, row, index){
            var result = '';
            //$.each(row, function(p){
            var data = row[0];
            for (var key in data) {
                if (key == 'memberId') {
                    //
                    result += buildElement(data[key]);
                }
                }
            //});
            return result;
        }

        function accountFormatter(value, row, index){
            var result = '';
            $.each(row, function(p){
            var data = row[p];
            for (var key in data) {
                if (key == 'accountNo') {
                    //
                    result += buildElement(data[key]);
                }
                }
            });
            return result;
        }

        function accountTypeFormatter(value, row, index){
            var result = '';
            $.each(row, function(p){
            var data = row[p];
            for (var key in data) {
                if (key == 'acctype') {
                    if(data[key] == 'Normal' || data[key] == 'Savings' ){
                        result += buildElement('Savings', 'savings');
                    }else{
                        result += buildElement(data[key], 'loans');
                    }
                    //result += buildElement(data[key]);
                }
                }
            });
            return result;
        }

        function accountAmountFormatter(value, row, index){
            var result = '';
            $.each(row, function(p){
            var data = row[p];
            for (var key in data) {
                if (key == 'acctype') {
                    if(data[key] == 'Normal' || data[key] == 'Savings' ){
                        result += buildElement(currformatter.format(data['savBalance']), 'savings');
                    }else{
                        result += buildElement(currformatter.format(data['loanBalance']), 'loans');
                    }
                    
                    
                }
                }
            });
            return result;
        }
        


        function approveFormatter(value, row, index) {
            if (row.debit === null || row.credit === null) {
                return '<button class="btn btn-info" id="' + index + '" onclick="viewPost(' + row.id + ');">VIEW</button> ';
            } else {
                var userroles = JSON.parse(localStorage.getItem('userroles'));
                if (userroles.includes('postingapproval')) {
                    return '<button class="btn btn-info" id="' + index + '" onclick="viewPost(' + row.id + ');">VIEW</button> ' +
                        '<button class="btn btn-success Financeadmin" id="' + index + '" onclick="approveJournal(' + index + ');">Approve</button> ' +
                        '<button class="btn btn-danger" id="' + index + '" onclick="declineJV(' + index + ');">Decline</button>';
                } else {
                    return '<button class="btn btn-info" id="' + index + '" onclick="viewPost(' + row.id + ');">VIEW</button> ';
                }

            }
        }

        function glcodeFormatter(value, row, index) {
            return '<span class="trigger">' + value + '</span>';
        }

        function reviseApproveFormatter(value, row, index) {
            return '<button class="btn btn-info" id="' + index + '" onclick="viewPost(' + row.id + ');">VIEW</button> ' +
                '<button class="btn btn-danger" id="' + index + '" onclick="revisePost(' + row.id + ');"><i class="fa fa-edit"></i> REVISE</button> ';
        }

        function viewApproveFormatter(value, row, index) {
            return '<button class="btn btn-info" id="' + index + '" onclick="viewPost(' + row.id + ');">VIEW</button> ';
        }
        function stateSTatusFormatter(value, row, index) {
            if (value === 'DECLINED') {
                return '<span class="btn-danger">' + value + '</span>';
            } else {
                return '<span class="btn-success">' + value + '</span>';
            }
        }

        $('#tab').tabs({
            collapsible: true
        })

        $('#dividendsTab').on('post-body.bs.table', function () {
            $(".table tbody > tr > td .trigger").each(function () {
                var gl = JSON.parse(localStorage.getItem('glcodes') || "[]");
                var gcode = $(this).text();
                $(this).attr('title', gl[gcode]);
            });
        });
    });
</script>
}
